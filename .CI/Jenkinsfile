def isPR() {
  return env.CHANGE_ID ? true : false
}
pipeline {
  agent none
  options {
    newContainerPerStage()
    disableConcurrentBuilds()
    buildDiscarder(logRotator(daysToKeepStr: "14", artifactNumToKeepStr: "2"))
  }
  environment {
    LC_ALL = 'C.UTF-8'
  }
  stages {
    stage('build') {
    agent {
      dockerfile {
        additionalBuildArgs '--pull'
        dir '.CI/image'
        label 'r630-2'
        args "--mount type=volume,source=hugo-cache,target=/cache/hugo " +
             "-v /var/www/hugo.openmodelica.org:/var/www/hugo.openmodelica.org"
      }
    }
    steps {
      script {
        echo "Running on: ${env.NODE_NAME}"
        sh "hugo --gc --minify=true --cleanDestinationDir --cacheDir=/cache/hugo --noTimes --noChmod ${isPR() ? '--destination=public --buildDrafts=true --buildExpired=true --buildFuture=true' : '--destination=/var/www/hugo.openmodelica.org'}"
        if (isPR()) {
          sh "zip -r www.openmodelica.org.zip public/"
          archiveArtifacts artifacts: 'www.openmodelica.org.zip', fingerprint: true
        }
      }
    }
    }
    stage('linkchecker') {
    agent {
      dockerfile {
        additionalBuildArgs '--pull'
        dir '.CI/image'
        label 'r630-2'
        args "--mount type=volume,source=hugo-cache,target=/cache/hugo " +
             "-v /var/www/hugo.openmodelica.org:/var/www/hugo.openmodelica.org"
      }
    }
    when {
      beforeAgent true
      branch 'main'
    }
    steps {
      script {
        echo "Running on: ${env.NODE_NAME}"
        sh '''
        HOME=/tmp && linkchecker --threads=15  --no-robots --check-extern \
        --ignore-url=https://openmodelica.org/forum \
        --ignore-url=https://openmodelica.org/doc \
        --ignore-url=https://openmodelica.org/svn \
        --ignore-url=https://lists.liu.se/mailman/listinfo \
        --ignore-url=https://openmodelica.org/git-readonly/ \
        --ignore-url=http://omwebbook.openmodelica.org/ \
        --ignore-url=https://openmodelica.org/git/ \
        --ignore-url=http://dx.doi.org/10. \
        --ignore-url=https://www.sj.se \
        --ignore-url=http://en.wikipedia.org \
        --ignore-url=https://www.statistikdatabasen.scb.se/ \
        --ignore-url=https://www.bloomberg.com/profile/company/1732547D%3ACH \
        --ignore-url=https://www.linkopingcityairport.se.* \
        --ignore-url=https://www.flygbussarna.se/en/ \
        --ignore-url=https://dl.acm.org/citation.* \
        --ignore-url=https://ieeexplore.ieee.org/stamp.* \
        --ignore-url=http://archiv.aplimat.com/2007.* \
        --ignore-url=http://www.internationalmathematicasymposium.org/IMS99.* \
        --ignore-url=http://www.sciencedirect.com/science/article/pii/S0096300317308883 \
        --ignore-url=http://eu.wiley.com/WileyCDA/WileyTitle/productCd-111885912X.html \
        --ignore-url=https://www.vadstena.se \
        --ignore-url=https://om.fossee.in.* \
        https://openmodelica.org
        '''
      }
    }
  }
  }
  post {
    failure {
      script {
        def userIds = (slackUserIdsFromCommitters() + ["UBJDHQY3U" /* sjoelund */])
        def userIdsString = userIds.collect { "<@$it>" }.join(' ')
        echo "$userIdsString"
        slackSend(channel: '#jenkins', message: "$userIdsString Something is wrong with ${env.BUILD_URL}", sendAsText: true)
      }
    }
  }
}
